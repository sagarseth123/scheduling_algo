#include<iostream>
#include<bits/stdc++.h>

using namespace std;

int main(){
    vector<int> block1;
    vector<int> block;
    vector<int> process;
    int i,b,p,x;
    cout<<"Enter no of memory blocks: ";
    cin>>b;
    vector<vector<int>> ff;
    vector<vector<int>> bf;
    vector<vector<int>> wf;
    
    cout<<"Enter memory size of each block: ";
    for(i=0;i<b;i++){
        cin>>x;
        block1.push_back(x);
    }
    cout<<"Enter no of processes: ";
    cin>>p;
    cout<<"Enter memory size of each process: ";
    for(i=0;i<p;i++){
        cin>>x;
        process.push_back(x);
    }
    
    //first fit;
    block=block1;
    int j=0;
    for(i=0;i<p;i++){
        j=0;
        while(j<b && process[i]>block[j]){
            j++;
        }
        if(j<b){
            block[j] = block[j]-process[i];
            ff.push_back({i,process[i],j});
        }else{
            ff.push_back({i,process[i],-2});
        }
    }
    
    //best fit:
    int flag=0;
    block=block1;
    int min_block=INT_MAX;
    int block_index;
    for(i=0;i<p;i++){
        j=0;
        flag=0;
        while(j<b){
            if(block[j]>process[i] && min_block>block[j]-process[i]){
                block_index=j;
                min_block=block[j]-process[i];
                flag=1;
            }
            j++;
        }
        if(flag==1){
            block[block_index] = block[block_index]-process[i];
            bf.push_back({i,process[i],block_index});
        }else{
            bf.push_back({i,process[i],-2});
        }
    }
    
    
    //worst fit:
    block=block1;
    int max_block=INT_MIN;
    for(i=0;i<p;i++){
        j=0;
        flag=0;
        while(j<b){
            if(block[j]>process[i] && max_block<block[j]-process[i]){
                block_index=j;
                max_block=block[j]-process[i];
                flag=1;
            }
            j++;
        }
        if(flag==1){
            block[block_index] = block[block_index]-process[i];
            wf.push_back({i,process[i],block_index});
        }else{
            wf.push_back({i,process[i],-2});
        }
    }
    
    
    
    cout<<"First Fit is: \n";
    cout<<"P ID \t process size \t block index \n";
    cout<<endl;
    for(i=0;i<ff.size();i++){
        cout<<"  "<<ff[i][0]+1<<"\t\t"<<ff[i][1]<<"\t\t"<<ff[i][2]+1<<endl;
    }
    cout<<endl;
    
    
    cout<<"Best Fit is: \n";
    cout<<"P ID \t process size \t block index \n";
    for(i=0;i<bf.size();i++){
        cout<<"  "<<bf[i][0]+1<<"\t\t"<<bf[i][1]<<"\t\t"<<bf[i][2]+1<<endl;
    }
    cout<<endl;
    
    cout<<"worst Fit is: \n";
    cout<<"P ID \t process size \t block index \n";
    for(i=0;i<wf.size();i++){
        cout<<"  "<<wf[i][0]+1<<"\t\t"<<wf[i][1]<<"\t\t"<<wf[i][2]+1<<endl;
    }
    
    
    cout<<endl;
    for(i=0;i<b;i++){
        cout<<block1[i]<<"  ";
    }
}
