#include<iostream>
#include<bits/stdc++.h>
using namespace std;



int main(){
    cout<<"Enter no of processes: ";
    int p;
    cin>>p;
    vector<vector<int>> process(p,vector<int> (4));
    int x,y,i,k;
    cout<<"Enter arrival and burst time of all process\n";
    for(i=0;i<p;i++){
        // cin>>x>>y;
        // process.push_back({x,y,i,y});
        cin>>process[i][0]>>process[i][1];
        process[i][2]=i;
        process[i][3]=process[i][1];
    }
    int gc[100];
    int clk=0,j;
    vector<vector<int>> answer;
    vector<int> temp;
    queue<vector<int>> que;
    cout<<"Enter time quantum: ";
    cin>>k;
    sort(process.begin(),process.end());
    que.push(process[0]);
    i=1;
    int ct=0;
    while(i<p || !que.empty()){
        temp=que.front();
        que.pop();
        if(temp[1]>k){
            temp[1] =temp[1]- k;
            ct = ct + k;
            j=0;
            while(j<k){
                gc[clk++]=temp[2];
                j++;
            }
        }else{
            ct += temp[1];
            temp[1]=0;
            j=0;
            while(j<temp[1]){
                gc[clk++]=temp[2];
                j++;
            }
            temp.push_back(ct);                   //completion time
            temp.push_back(ct-temp[0]);          //TAT=CT-AT
            temp.push_back(temp[5]-temp[3]);    // WT= TAT-BT
            answer.push_back(temp);
        }
        
        while(i<p && ct>=process[i][0]){
            que.push(process[i]);
            i++;
        }
        if(temp[1]!=0){
            que.push(temp);
        }
        temp.clear();
    }
    cout<<"P ID \t AT \t BT \t CT \t TAT \t WT \n";
    for(i=0;i<p;i++){
        cout<<answer[i][2]<<"\t"<<answer[i][0]<<"\t"<<answer[i][3]<<"\t"<<answer[i][4]<<"\t"<<answer[i][5]<<"\t"<<answer[i][6]<<endl;
    }
    cout<<endl;
    for(i=0;i<clk;i++){
        cout<<"p"<<gc[i]+1<<"   ";
    }
}
